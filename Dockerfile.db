# Build command: docker build -f Dockerfile.db -t chomp-db .
# Run command: docker run -d chomp-db --name chomp-db-1

# 1. Prepare TDEngine binaries and libs from base debian image (transient)
FROM tdengine/tdengine:3.2.3.0 AS tdengine-base
RUN mkdir -p /deps
RUN for bin in /usr/bin/taosd /usr/bin/taos; do \
        ldd $bin | tr -s '[:space:]' | cut -d' ' -f3 | grep '^/' | xargs -I {} cp -u {} /deps/; \
    done

# 2. Prepare Redis binaries and libs from base debian image (transient)
FROM redis:7.2.4-bookworm AS redis-base
RUN mkdir -p /deps
RUN for bin in /usr/local/bin/redis-server /usr/local/bin/redis-cli; do \
        ldd $bin | tr -s '[:space:]' | cut -d' ' -f3 | grep '^/' | xargs -I {} cp -u {} /deps/; \
    done

# 3. Final image - ubuntu 24.04 (persistent)
FROM ubuntu:noble

# Set environment variables
# NB: these are baked into the image if used in COPY commands and won't be updated by .env file at runtime
ENV DEBIAN_FRONTEND=noninteractive \
    TZ=UTC \
    DB_MAX_CONNECTIONS=50000 \
    DB_ROOT_USER=root \
    DB_ROOT_PASS=pass \
    DB_RW_USER=rw \
    DB_RW_PASS=pass \
    DB_MAX_ROWS_PER_QUERY=1000000 \
    REDIS_HOST=0.0.0.0 \
    REDIS_PORT=40001 \
    REDIS_MASTER_HOST=0.0.0.0 \
    REDIS_MASTER_PORT=40001 \
    REDIS_DUMP_SETTING="3600 1 300 100 60 10000" \
    REDIS_MAX_RAM=1G \
    DB_HOST=0.0.0.0 \
    DB_PORT=40002 \
    DB_MASTER_HOST=0.0.0.0 \
    DB_MASTER_PORT=40002

# Set the timezone
RUN ln -snf /usr/share/zoneinfo/$TZ /etc/localtime && echo $TZ > /etc/timezone

# Create data directories
RUN mkdir -p /data/taos/log /data/redis/log

# Copy TDengine binaries from base image
COPY --from=tdengine-base /deps/* /usr/lib/
COPY --from=tdengine-base /usr/bin/taosd /usr/bin/taosd
COPY --from=tdengine-base /usr/bin/taos /usr/bin/taos
COPY --from=tdengine-base /usr/bin/taosadapter /usr/bin/taosadapter

# Configure TDengine
COPY <<EOF /tmp/init_taos.sql
ALTER USER $DB_ROOT_USER PASS "$DB_ROOT_PASS";
CREATE USER $DB_RW_USER PASS "$DB_RW_PASS" SYSINFO 0;
GRANT READ, WRITE ON *.* TO $DB_RW_USER;
EOF

COPY <<EOF /etc/taos/taos.cfg
fqdn                    0.0.0.0
serverPort              $DB_PORT
firstEp                 $DB_MASTER_HOST:$DB_MASTER_PORT
numOfRpcSessions        $DB_MAX_CONNECTIONS
maxShellConns           $DB_MAX_CONNECTIONS
tmqMaxTopicNum          100
maxTsmaNum              5
dataDir                 /data/taos
logDir                  /data/taos/log
tempDir                 /tmp
debugFlag               131
logKeepDays             30
telemetryReporting      0
crashReporting          0
locale                  C.UTF-8
charset                 UTF-8
timezone                UTC
comp                    1
countAlwaysReturnValue  1
maxNumOfDistinctRes     $DB_MAX_ROWS_PER_QUERY
maxInsertBatchRows      $DB_MAX_ROWS_PER_QUERY
ttlChangeOnWrite        1
EOF

COPY <<EOF /etc/taos/taosadapter.toml
debug = false
taosConfigDir = "/etc/taos/"
port = 40003
logLevel = "info"
httpCodeServerError = false
SMLAutoCreateDB = false

[cors]
allowAllOrigins = true

#[pool]
#maxConnect = 0
#maxIdle = 0
#idleTimeout = 0

# [log]
#path = "/var/log/taos"
# rotationCount = 30
# rotationTime = "24h"
# rotationSize = "1GB"
# enableRecordHttpSql = false
# sqlRotationCount = 2
# sqlRotationTime = "24h"
# sqlRotationSize = "1GB"

[opentsdb]
enable = true

[influxdb]
enable = true

[opentsdb_telnet]
enable = false

[prometheus]
enable = false

[statsd]
enable = false

[collectd]
enable = false

[node_exporter]
enable = false

[tmq]
releaseIntervalMultiplierForAutocommit = 2

[monitor]
disable = true

[uploadKeeper]
enable = false

EOF

# Copy Redis binaries from base image
COPY --from=redis-base /deps/* /usr/lib/
COPY --from=redis-base /usr/local/bin/redis-server /usr/local/bin/redis-server
COPY --from=redis-base /usr/local/bin/redis-cli /usr/local/bin/redis-cli

# Configure Redis
COPY <<EOF /etc/redis/users.acl
user $DB_ROOT_USER on ~* +@all >$DB_ROOT_PASS
user $DB_RW_USER on ~* +@all -@dangerous +info +role +dbsize +keys allchannels >$DB_RW_PASS
user default off -@all

EOF

COPY <<EOF /etc/redis/redis.conf
bind                    0.0.0.0 -::1
port                    $REDIS_PORT
maxclients              $DB_MAX_CONNECTIONS
aclfile                 /etc/redis/users.acl
masteruser              $DB_ROOT_USER
masterauth              $DB_ROOT_PASS
protected-mode          no
cluster-port            0
cluster-enabled         no
# replicaof               $REDIS_MASTER_HOST $REDIS_MASTER_PORT
# replica-read-only       yes
save                    $REDIS_DUMP_SETTING
rdbcompression          yes
dbfilename              dump.rdb
stop-writes-on-bgsave-error yes
timeout                 0
databases               1
repl-timeout            60
dir                     /data/redis
logfile                 /data/redis/log/redis.log
maxmemory               $REDIS_MAX_RAM
maxmemory-policy        allkeys-lru
maxmemory-samples       5
maxmemory-eviction-tenacity 10
appendonly              no
appendfsync             no
activedefrag            no
active-defrag-cycle-min 1
active-defrag-cycle-max 25
EOF

# Expose ports
EXPOSE $REDIS_PORT $DB_PORT

# DBs start script
COPY <<EOF /usr/local/bin/start-db.sh
#!/bin/bash
set -e
redis-server /etc/redis/redis.conf &
taosd -c /etc/taos >/dev/null 2>&1 &
sleep 5
taos -h 0.0.0.0 -P $DB_PORT -s "source /tmp/init_taos.sql;"
rm /tmp/init_taos.sql
taosadapter -c /etc/taos/taosadapter.toml &
tail -f /data/taos/log/taosd*log*
EOF
RUN chmod +x /usr/local/bin/start-db.sh

# Set entrypoint to the above script
ENTRYPOINT ["/usr/local/bin/start-db.sh"]
